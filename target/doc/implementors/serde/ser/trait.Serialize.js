(function() {var implementors = {
"client":[["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"client/structs/challenge/enum.ChallengeFormat.html\" title=\"enum client::structs::challenge::ChallengeFormat\">ChallengeFormat</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/challenge/struct.ChallengeResult.html\" title=\"struct client::structs::challenge::ChallengeResult\">ChallengeResult</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"client/structs/challenge/enum.ChallengeAnswer.html\" title=\"enum client::structs::challenge::ChallengeAnswer\">ChallengeAnswer</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/challenge/struct.ChallengeTimeout.html\" title=\"struct client::structs::challenge::ChallengeTimeout\">ChallengeTimeout</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"client/structs/challenge/enum.ChallengeValue.html\" title=\"enum client::structs::challenge::ChallengeValue\">ChallengeValue</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/challenge/struct.Ok.html\" title=\"struct client::structs::challenge::Ok\">Ok</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/connection/struct.Welcome.html\" title=\"struct client::structs::connection::Welcome\">Welcome</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/connection/struct.Subscribe.html\" title=\"struct client::structs::connection::Subscribe\">Subscribe</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"client/structs/connection/enum.SubscribeResult.html\" title=\"enum client::structs::connection::SubscribeResult\">SubscribeResult</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"client/structs/connection/enum.SubscribeError.html\" title=\"enum client::structs::connection::SubscribeError\">SubscribeError</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/game/struct.PublicLeaderBoard.html\" title=\"struct client::structs::game::PublicLeaderBoard\">PublicLeaderBoard</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/game/struct.PublicPlayer.html\" title=\"struct client::structs::game::PublicPlayer\">PublicPlayer</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/game/struct.RoundSummary.html\" title=\"struct client::structs::game::RoundSummary\">RoundSummary</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/game/struct.BadResult.html\" title=\"struct client::structs::game::BadResult\">BadResult</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/game/struct.ReportedChallengeResult.html\" title=\"struct client::structs::game::ReportedChallengeResult\">ReportedChallengeResult</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/game/struct.EndOfGame.html\" title=\"struct client::structs::game::EndOfGame\">EndOfGame</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/md5/struct.MD5HashCash.html\" title=\"struct client::structs::md5::MD5HashCash\">MD5HashCash</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"client/structs/md5/struct.MD5HashCashOutput.html\" title=\"struct client::structs::md5::MD5HashCashOutput\">MD5HashCashOutput</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"client/structs/message/enum.Message.html\" title=\"enum client::structs::message::Message\">Message</a>"]],
"serde":[],
"serde_json":[["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>&gt;"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>"],["impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()